(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{174:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"_330-patching-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_330-patching-array","aria-hidden":"true"}},[s._v("#")]),s._v(" 330. Patching Array")]),s._v(" "),a("h3",{attrs:{id:"tags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tags","aria-hidden":"true"}},[s._v("#")]),s._v(" Tags")]),s._v(" "),a("ol",[a("li",[s._v("Greedy")])]),s._v(" "),a("blockquote",[a("p",[s._v("Given a sorted positive integer array nums and an integer n, add/patch elements to the array such that any number in range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.")]),s._v(" "),a("p",[a("strong",[s._v("Example 1:")])]),s._v(" "),a("p",[s._v("nums = [1, 3], n = 6")]),s._v(" "),a("p",[s._v("Return 1.")]),s._v(" "),a("p",[s._v("Combinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.")]),s._v(" "),a("p",[s._v("Now if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3].")]),s._v(" "),a("p",[s._v("Possible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].")]),s._v(" "),a("p",[s._v("So we only need 1 patch.")]),s._v(" "),a("p",[a("strong",[s._v("Example 2:")])]),s._v(" "),a("p",[s._v("nums = [1, 5, 10], n = 20")]),s._v(" "),a("p",[s._v("Return 2.")]),s._v(" "),a("p",[s._v("The two patches can be [2, 4].")]),s._v(" "),a("p",[a("strong",[s._v("Example 3:")])]),s._v(" "),a("p",[s._v("nums = [1, 2, 2], n = 5")]),s._v(" "),a("p",[s._v("Return 0.")])]),s._v(" "),a("h3",{attrs:{id:"题意："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题意：","aria-hidden":"true"}},[s._v("#")]),s._v(" 题意：")]),s._v(" "),a("p",[s._v("给定一个正整数数组排序数组和一个整数n，添加/补丁元素的数组，例如，任何数量在范围[ 1，n ]，包含可以通过数组中的一些元素的和形成。返回所需的最小数量的数字。")]),s._v(" "),a("h3",{attrs:{id:"分析："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析：","aria-hidden":"true"}},[s._v("#")]),s._v(" 分析：")]),s._v(" "),a("ol",[a("li",[s._v("给定一个正整数数组排序数组和一个整数n，添加/补丁元素的数组，例如，任何数量在范围[ 1，n ]")]),s._v(" "),a("li",[s._v("包含可以通过数组中的一些元素的和形成。返回所需的最小数量的数字。让错过成为数组中元素的总和不能形成的最小的数字。")]),s._v(" "),a("li",[s._v("在[ 0，miss)的所有元素都可以形成。错过值开始于1。下一个数 nums[i]<=miss，然后边增加到[ 0，miss+nums[i]），")]),s._v(" "),a("li",[s._v("因为所有的边界之间的数字可以形成；如果下一个nums[i] > miss，这意味着有一个差距，我们需要插入一个数字，")]),s._v(" "),a("li",[s._v("插入miss本身是一个选择，因为它的边界双打和覆盖每一个数字之间的界限[ 0，miss+miss]")])]),s._v(" "),a("h3",{attrs:{id:"思路："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路：","aria-hidden":"true"}},[s._v("#")]),s._v(" 思路：")]),s._v(" "),a("p",[s._v("思路很简单:")]),s._v(" "),a("ol",[a("li",[s._v("当miss < n 时，循环数组；")]),s._v(" "),a("li",[s._v("如果nums[i] <= miss; nums[i]累加到miss中；")]),s._v(" "),a("li",[s._v("如果nums[i] > miss; miss累加miss,count自增")])]),s._v(" "),a("h3",{attrs:{id:"js实现："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js实现：","aria-hidden":"true"}},[s._v("#")]),s._v(" Js实现：")]),s._v(" "),a("h4",{attrs:{id:"复杂度："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂度：","aria-hidden":"true"}},[s._v("#")]),s._v(" 复杂度：")]),s._v(" "),a("p",[s._v("时间复杂度O(n)")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/**\n * @param {number[]} nums\n * @param {number} n\n * @return {number}\n */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("minPatches")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" n"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" miss "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" count "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("miss "),a("span",{attrs:{class:"token operator"}},[s._v("<=")]),s._v(" n"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("//数组nums的长度，以及nums数字小于初始目标数字")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v(" nums"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" nums"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("<=")]),s._v(" miss"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      miss "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" miss "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" nums"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      i"),a("span",{attrs:{class:"token operator"}},[s._v("++")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      miss "),a("span",{attrs:{class:"token operator"}},[s._v("+=")]),s._v(" miss"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      count"),a("span",{attrs:{class:"token operator"}},[s._v("++")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" count"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])])])}],!1,null,null,null);e.options.__file="330_Patching_Array.md";t.default=e.exports}}]);