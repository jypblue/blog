(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{177:function(s,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"_2-add-two-numbers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-add-two-numbers","aria-hidden":"true"}},[s._v("#")]),s._v(" 2. Add Two Numbers")]),s._v(" "),a("h3",{attrs:{id:"tags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tags","aria-hidden":"true"}},[s._v("#")]),s._v(" Tags")]),s._v(" "),a("ol",[a("li",[s._v("Linked List")]),s._v(" "),a("li",[s._v("Math")])]),s._v(" "),a("blockquote",[a("p",[s._v("You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.")])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("Input:")]),s._v(" "),a("code",[s._v("(2 -> 4 -> 3) + (5 -> 6 -> 4)")])]),s._v(" "),a("p",[a("strong",[s._v("Output:")]),s._v(" "),a("code",[s._v("7 -> 0 -> 8")])])]),s._v(" "),a("h3",{attrs:{id:"题意："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题意：","aria-hidden":"true"}},[s._v("#")]),s._v(" 题意：")]),s._v(" "),a("p",[s._v("有两个表示两个非负数字的链表。这些数字以相反的顺序存储，每个节点都包含一个数字。\n相加两个数字，并将其作为链接列表返回。")]),s._v(" "),a("h3",{attrs:{id:"分析："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析：","aria-hidden":"true"}},[s._v("#")]),s._v(" 分析：")]),s._v(" "),a("p",[s._v("根据上面题意所示，按照题目要求，直接相加即可，但是有几点还是需要注意一下：")]),s._v(" "),a("ol",[a("li",[s._v("每个节点的进位问题 => 将进位的数字传给后位相加")]),s._v(" "),a("li",[s._v("两个链表的状态情况得考虑完整 => 注意为空不为空的所有情况")]),s._v(" "),a("li",[s._v("第三位出现进位情况 => 第三位超过10则新增一位，并添加进位的数值")])]),s._v(" "),a("h3",{attrs:{id:"思路："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路：","aria-hidden":"true"}},[s._v("#")]),s._v(" 思路：")]),s._v(" "),a("p",[s._v("按照上面的分析，我们来分解一下，简单理一下思路：")]),s._v(" "),a("ol",[a("li",[s._v("新建一个ListNode作为根节点")]),s._v(" "),a("li",[s._v("分成4种可能出现的情况：1、l1,l2都为空；2、l1,l2都不为空；3、l1不为空，l2为空；4、l2不为空l1为空。每种情况的相加进位")]),s._v(" "),a("li",[s._v("如果最后一位再进位，节点再多添加一个")]),s._v(" "),a("li",[s._v("返回根节点后一位的ListNode")])]),s._v(" "),a("h3",{attrs:{id:"js实现："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js实现：","aria-hidden":"true"}},[s._v("#")]),s._v(" Js实现：")]),s._v(" "),a("h4",{attrs:{id:"方法-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-1","aria-hidden":"true"}},[s._v("#")]),s._v(" 方法 #1")]),s._v(" "),a("h4",{attrs:{id:"复杂度："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂度：","aria-hidden":"true"}},[s._v("#")]),s._v(" 复杂度：")]),s._v(" "),a("p",[s._v("迭代写法，以节点个数为准，所以时间复杂度为O(n)，空间复杂度O(1)")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("addTwoNumbers")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l1"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l2"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l1 "),a("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" l2 "),a("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{attrs:{class:"token comment"}},[s._v("//新建一个ListNode作为根节点")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" node "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" point "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" node"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" val "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token comment"}},[s._v("//当l1和l2都不为空得时候，求得各个节点的值")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l1 "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" l2 "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sum "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" val "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" l1"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" l2"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    point"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    val "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("floor")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    l1 "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" l1"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    l2 "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" l2"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    point "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" point"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{attrs:{class:"token comment"}},[s._v("//当l1不为空，l2为空得时候")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l1 "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sum "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" val "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" l1"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    point"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    val "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("floor")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    l1 "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" l1"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    point "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" point"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{attrs:{class:"token comment"}},[s._v("//当l2不为空，l1为空的时候")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l2 "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sum "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" val "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" l2"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    point"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    val "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("floor")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),a("span",{attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    l2 "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" l2"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    point "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" point"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{attrs:{class:"token comment"}},[s._v("//最后一位如果进一位")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    point"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" node"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br")])]),a("h4",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2","aria-hidden":"true"}},[s._v("#")]),s._v(" 方法 #2")]),s._v(" "),a("h4",{attrs:{id:"复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂度","aria-hidden":"true"}},[s._v("#")]),s._v(" 复杂度")]),s._v(" "),a("p",[s._v("循环迭代一次，所以时间复杂度 O(n)，空间复杂度 O(1)")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("addTwoNumbers")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l1"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("l2"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" node "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("-")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 头节点")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" carry "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" prev "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" node"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" pa "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" l1"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pb "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" l2"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         pa "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" pb "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         pa "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" pa "),a("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" pa"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n         pb "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" pb "),a("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" pb"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n         prev "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" prev"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ai "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" pa "),a("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" pa"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bi "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" pb "),a("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" pb"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("val"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" value "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ai "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" bi "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" carry"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            carry "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Math"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("floor")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ai "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" bi "),a("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" carry"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("10")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            prev"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{attrs:{class:"token comment"}},[s._v("// 尾插法")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("carry "),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("0")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" prev"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{attrs:{class:"token class-name"}},[s._v("ListNode")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("carry"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" node"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])])}],!1,null,null,null);r.options.__file="2_Add_Two_Numbers.md";t.default=r.exports}}]);